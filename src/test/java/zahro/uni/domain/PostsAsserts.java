package zahro.uni.domain;

import static org.assertj.core.api.Assertions.assertThat;
import static zahro.uni.domain.AssertUtils.zonedDataTimeSameInstant;

public class PostsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPostsAllPropertiesEquals(Posts expected, Posts actual) {
        assertPostsAutoGeneratedPropertiesEquals(expected, actual);
        assertPostsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPostsAllUpdatablePropertiesEquals(Posts expected, Posts actual) {
        assertPostsUpdatableFieldsEquals(expected, actual);
        assertPostsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPostsAutoGeneratedPropertiesEquals(Posts expected, Posts actual) {
        assertThat(expected)
            .as("Verify Posts auto generated properties")
            .satisfies(e -> assertThat(e.getPostId()).as("check postId").isEqualTo(actual.getPostId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPostsUpdatableFieldsEquals(Posts expected, Posts actual) {
        assertThat(expected)
            .as("Verify Posts relevant properties")
            .satisfies(e -> assertThat(e.getTitle()).as("check title").isEqualTo(actual.getTitle()))
            .satisfies(e -> assertThat(e.getContent()).as("check content").isEqualTo(actual.getContent()))
            .satisfies(e ->
                assertThat(e.getCreatedAt())
                    .as("check createdAt")
                    .usingComparator(zonedDataTimeSameInstant)
                    .isEqualTo(actual.getCreatedAt())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPostsUpdatableRelationshipsEquals(Posts expected, Posts actual) {
        assertThat(expected)
            .as("Verify Posts relationships")
            .satisfies(e -> assertThat(e.getTags()).as("check tags").isEqualTo(actual.getTags()));
    }
}
